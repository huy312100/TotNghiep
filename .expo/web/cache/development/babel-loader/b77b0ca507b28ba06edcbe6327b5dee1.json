{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TotNghiep\\\\TotNghiep\\\\src\\\\screens\\\\authentications\\\\Register.js\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Heading, UsernameInput, PasswordInput } from \"../../components/authentications/common/Index\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport * as universityActions from \"../../../store/actions/University\";\nimport * as authActions from \"../../../store/actions/Authen\";\nimport LoadingScreen from \"../LoadingScreen\";\nimport University from \"../../../models/University\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPwd = _useState6[0],\n      setConfirmPwd = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fullname = _useState8[0],\n      setFullname = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      idUni = _useState10[0],\n      setIdUni = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      idFaculty = _useState12[0],\n      setIdFaculty = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      itemNameUniversity = _useState16[0],\n      setItemNameUniversity = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      itemFacultyName = _useState18[0],\n      setItemFacultyName = _useState18[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var getAllUniNames = function getAllUniNames() {\n      getAllInfoUniversity();\n    };\n\n    getAllUniNames();\n  }, []);\n\n  var getAllInfoUniversity = function getAllInfoUniversity() {\n    fetch(\"https://hcmusemu.herokuapp.com/university/getname\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var dataUniversity = [];\n\n      for (var key in json) {\n        dataUniversity.push(new University(json[key].MaTruong, json[key].TenTruongDH));\n      }\n\n      var temp = [];\n\n      for (var _key in dataUniversity) {\n        temp.push({\n          label: dataUniversity[_key].name,\n          value: dataUniversity[_key].id\n        });\n      }\n\n      console.log(temp);\n      setItemNameUniversity(temp);\n      dispatch(universityActions.getAllInfoUniversity(dataUniversity));\n    }).catch(function (err) {\n      return console.log(err, \"error\");\n    });\n  };\n\n  var getAllFacultyName = function getAllFacultyName(idUni) {\n    var details = {\n      MaTruong: idUni\n    };\n    var formBody = [];\n\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n\n    formBody = formBody.join(\"&\");\n    fetch(\"https://hcmusemu.herokuapp.com/faculty/getname\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: formBody\n    }).then(function (response) {\n      var statusCode = response.status;\n      var dataRes = response.json();\n      return Promise.all([statusCode, dataRes]);\n    }).then(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          statusCode = _ref3[0],\n          dataRes = _ref3[1];\n\n      var temp = [];\n\n      for (var key in dataRes) {\n        temp.push({\n          label: dataRes[key].TenKhoa,\n          value: dataRes[key].MaKhoa\n        });\n      }\n\n      console.log(temp);\n      setItemFacultyName(temp);\n    }).done();\n  };\n\n  var checkUsername = function checkUsername() {\n    var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var WHITESPACE_REGEX = /\\s/;\n\n    if (!EMAIL_REGEX.test(username.toLowerCase()) || username.trim().length === 0 || WHITESPACE_REGEX.test(username)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var checkPassword = function checkPassword() {\n    if (password.length === 0) {\n      return false;\n    } else {\n      if (password != confirmPwd) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var register = function register() {\n    setLoading(true);\n    var details = {\n      username: username,\n      password: password,\n      HoTen: fullname,\n      MaTruong: idUni,\n      MaKhoa: idFaculty\n    };\n    var formBody = [];\n\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n\n    formBody = formBody.join(\"&\");\n    console.log(formBody);\n    fetch(\"https://hcmusemu.herokuapp.com/account/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: formBody\n    }).then(function (response) {\n      var statusCode = response.status;\n      var dataRes = response.json();\n      return Promise.all([statusCode, dataRes]);\n    }).then(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          statusCode = _ref5[0],\n          dataRes = _ref5[1];\n\n      console.log(statusCode, dataRes);\n\n      if (statusCode === 201) {\n        dispatch(authActions.register());\n        setLoading(false);\n        Alert.alert(\"Thành công\", \"Tạo tài khoản thành công\", [{\n          text: \"Xác nhận\",\n          onPress: function onPress() {\n            return navigation.navigate(\"Login\");\n          }\n        }]);\n      } else if (statusCode === 409) {\n        setLoading(false);\n        alert(\"Tên tài khoản đã bị trùng \");\n      } else {\n        setLoading(false);\n        alert(\"Đã xảy ra lỗi . Xin vui lòng thử lại sau !!!\");\n      }\n    }).done();\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, isLoading && LoadingScreen(), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"\\u0110\\u0103ng k\\xFD\"), React.createElement(UsernameInput, {\n    placeholder: \"Tên đăng nhập\",\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }), React.createElement(PasswordInput, {\n    placeholder: \"Mật khẩu\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }), React.createElement(PasswordInput, {\n    placeholder: \"Nhập lại mật khẩu\",\n    onChangeText: function onChangeText(password) {\n      return setConfirmPwd(password);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }), React.createElement(UsernameInput, {\n    placeholder: \"Họ và tên\",\n    onChangeText: function onChangeText(fullname) {\n      return setFullname(fullname);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.dropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      if (value != null) {\n        setIdUni(value);\n        getAllFacultyName(value);\n      }\n    },\n    useNativeAndroidPickerStyle: false,\n    placeholder: {\n      label: \"Chọn trường\",\n      value: null\n    },\n    items: itemNameUniversity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.dropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      if (value != null) {\n        console.log(value);\n        setIdFaculty(value);\n      }\n    },\n    useNativeAndroidPickerStyle: false,\n    placeholder: {\n      label: \"Chọn khoa\",\n      value: null\n    },\n    items: itemFacultyName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonLoginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnLoginTouchable,\n    onPress: function onPress() {\n      if (checkPassword() && checkUsername() && idUni != \"\" && idFaculty != \"\" && fullname.trim().length > 0) {\n        register();\n      } else if (fullname.trim().length === 0) {\n        alert(\"Tên không được bỏ trống\");\n      } else if (!checkUsername()) {\n        alert(\"Tên tài khoản không hợp lệ\");\n      } else if (idUni === \"\") {\n        alert(\"Xin vui lòng chọn trường\");\n      } else if (idFaculty === \"\") {\n        alert(\"Xin vui lòng chọn khoa\");\n      } else {\n        alert(\"Mặt khẩu hoặc mật khẩu xác nhận không hợp lệ\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textBtnLogIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"T\\u1EA1o t\\xE0i kho\\u1EA3n\"))), React.createElement(View, {\n    style: styles.bottomText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.signupText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, \"Tham gia ngay\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 10,\n    paddingTop: 120\n  },\n  dropdown: {\n    marginLeft: 15,\n    marginRight: 15,\n    backgroundColor: \"#cccc\",\n    paddingLeft: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    width: \"100%\",\n    borderRadius: 10,\n    marginVertical: 20\n  },\n  buttonLoginContainer: {\n    backgroundColor: \"green\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n    marginVertical: 20,\n    borderRadius: 10\n  },\n  textBtnLogIn: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  btnLoginTouchable: {\n    width: \"100%\"\n  },\n  bottomText: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    fontSize: 14\n  },\n  signupText: {\n    color: \"#000088\",\n    fontWeight: \"bold\",\n    marginLeft: 5\n  }\n});\nvar pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    fontSize: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 4,\n    color: 'black',\n    paddingRight: 30\n  },\n  inputAndroid: {\n    marginLeft: 15,\n    marginRight: 15,\n    backgroundColor: \"#cccc\",\n    paddingLeft: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    width: \"100%\",\n    borderRadius: 10,\n    marginVertical: 20\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/src/screens/authentications/Register.js"],"names":["React","useState","useEffect","useRef","Heading","UsernameInput","PasswordInput","RNPickerSelect","useDispatch","useSelector","shallowEqual","universityActions","authActions","LoadingScreen","University","RegisterScreen","navigation","username","setUsername","password","setPassword","confirmPwd","setConfirmPwd","fullname","setFullname","idUni","setIdUni","idFaculty","setIdFaculty","isLoading","setLoading","itemNameUniversity","setItemNameUniversity","itemFacultyName","setItemFacultyName","dispatch","getAllUniNames","getAllInfoUniversity","fetch","then","response","json","dataUniversity","key","push","MaTruong","TenTruongDH","temp","label","name","value","id","console","log","catch","err","getAllFacultyName","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","join","method","headers","body","statusCode","status","dataRes","Promise","all","TenKhoa","MaKhoa","done","checkUsername","EMAIL_REGEX","WHITESPACE_REGEX","test","toLowerCase","trim","length","checkPassword","register","HoTen","Alert","alert","text","onPress","navigate","Keyboard","dismiss","backgroundColor","styles","container","dropdown","buttonLoginContainer","btnLoginTouchable","textBtnLogIn","bottomText","signupText","StyleSheet","create","flex","alignItems","padding","paddingTop","marginLeft","marginRight","paddingLeft","paddingBottom","width","borderRadius","marginVertical","justifyContent","color","fontWeight","fontSize","textAlign","flexDirection","pickerSelectStyles","inputIOS","paddingVertical","paddingHorizontal","borderWidth","borderColor","paddingRight","inputAndroid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef  } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Alert\r\n} from \"react-native\";\r\nimport {\r\n  Heading,\r\n  UsernameInput,\r\n  PasswordInput,\r\n} from \"../../components/authentications/common/Index\";\r\nimport RNPickerSelect from \"react-native-picker-select\";\r\nimport { useDispatch, useSelector,shallowEqual  } from \"react-redux\";\r\nimport * as universityActions from \"../../../store/actions/University\";\r\nimport * as authActions from '../../../store/actions/Authen';\r\n\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\nimport University from \"../../../models/University\";\r\n\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [username,setUsername] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n  const [confirmPwd,setConfirmPwd] =useState(\"\");\r\n  const [fullname,setFullname] = useState(\"\");\r\n  const [idUni,setIdUni] = useState(\"\");\r\n  const [idFaculty,setIdFaculty] = useState(\"\");\r\n\r\n  const [isLoading,setLoading] = useState(false);\r\n\r\n  const [itemNameUniversity,setItemNameUniversity] = useState([]);\r\n  const [itemFacultyName,setItemFacultyName] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getAllUniNames = () => {\r\n      getAllInfoUniversity();\r\n      \r\n    };\r\n    getAllUniNames();\r\n  },[]);\r\n\r\n  const getAllInfoUniversity =()=>{\r\n    fetch(\"https://hcmusemu.herokuapp.com/university/getname\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        //console.log(json);\r\n        const dataUniversity = [];\r\n\r\n        for (const key in json) {\r\n          dataUniversity.push(\r\n            new University(\r\n              json[key].MaTruong,\r\n              json[key].TenTruongDH)\r\n          );\r\n        }\r\n\r\n        const temp=[];\r\n        for (const key in dataUniversity) {\r\n          temp.push({\r\n            label: dataUniversity[key].name,\r\n            value: dataUniversity[key].id,\r\n          });\r\n        }\r\n        console.log(temp);\r\n        setItemNameUniversity(temp);\r\n\r\n        dispatch(universityActions.getAllInfoUniversity(dataUniversity));\r\n        //console.log(dataUniversity);\r\n        \r\n      }).catch((err) => console.log(err, \"error\"));\r\n  }\r\n\r\n  // useEffect(() =>{\r\n  const getAllFacultyName = (idUni) => {\r\n    let details = {\r\n      MaTruong: idUni,\r\n    };\r\n\r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n      let encodedKey = encodeURIComponent(property);\r\n      let encodedValue = encodeURIComponent(details[property]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    fetch(\"https://hcmusemu.herokuapp.com/faculty/getname\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        body: formBody,\r\n      }).then((response) => {\r\n          const statusCode = response.status;\r\n          const dataRes = response.json();\r\n          return Promise.all([statusCode, dataRes]);\r\n      }).then(([statusCode, dataRes])=>{\r\n        //console.log(dataRes);\r\n        const temp=[];\r\n    \r\n\r\n        for (const key in dataRes) {\r\n          temp.push({\r\n            label: dataRes[key].TenKhoa,\r\n            value: dataRes[key].MaKhoa,\r\n          });\r\n        }\r\n        console.log(temp);\r\n        setItemFacultyName(temp);\r\n\r\n      }).done();\r\n  };\r\n\r\n  const checkUsername = () => {\r\n    var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    var WHITESPACE_REGEX = /\\s/;\r\n    if(!EMAIL_REGEX.test(username.toLowerCase()) || username.trim().length === 0 || WHITESPACE_REGEX.test(username)){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const checkPassword = () => {\r\n\r\n    if(password.length===0) {\r\n      return false;\r\n    }\r\n    else {\r\n      if(password!=confirmPwd){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  //call api register\r\n  const register = () => {\r\n    setLoading(true);\r\n    let details = {\r\n      username: username,\r\n      password: password,\r\n      HoTen: fullname,\r\n      MaTruong: idUni,\r\n      MaKhoa: idFaculty,\r\n    };\r\n\r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n      let encodedKey = encodeURIComponent(property);\r\n      let encodedValue = encodeURIComponent(details[property]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    console.log(formBody);\r\n\r\n    fetch(\"https://hcmusemu.herokuapp.com/account/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: formBody,\r\n    }).then((response)=>{\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes])=>{\r\n      console.log(statusCode, dataRes);\r\n      if(statusCode === 201){\r\n        dispatch(authActions.register());\r\n        setLoading(false);\r\n        Alert.alert(\r\n          \"Thành công\",\r\n          \"Tạo tài khoản thành công\",\r\n          [\r\n            {\r\n              text: \"Xác nhận\",\r\n              onPress: () => navigation.navigate(\"Login\"),\r\n            },\r\n          ]\r\n        );\r\n      }\r\n      else if(statusCode === 409){\r\n        setLoading(false);\r\n        alert(\"Tên tài khoản đã bị trùng \");\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        alert(\"Đã xảy ra lỗi . Xin vui lòng thử lại sau !!!\")\r\n      }\r\n    }).done();\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback\r\n      onPress={() => {\r\n        Keyboard.dismiss();\r\n      }}>\r\n      <ScrollView style={{backgroundColor: \"#fff\"}}>\r\n        {isLoading && LoadingScreen()}\r\n\r\n        <View style={styles.container}>\r\n          <Heading>Đăng ký</Heading>\r\n          <UsernameInput placeholder={\"Tên đăng nhập\"}\r\n          onChangeText={(username) => setUsername(username)} />\r\n\r\n          <PasswordInput placeholder={\"Mật khẩu\"}\r\n          onChangeText={(password) => setPassword(password)} />\r\n\r\n          <PasswordInput placeholder={\"Nhập lại mật khẩu\"}\r\n          onChangeText={(password) => setConfirmPwd(password)} />\r\n\r\n          <UsernameInput placeholder={\"Họ và tên\"} \r\n          onChangeText={(fullname) => setFullname(fullname)} />\r\n\r\n          <View style={styles.dropdown}>\r\n            <RNPickerSelect\r\n              onValueChange={(value) => { \r\n                if(value!=null){\r\n                  setIdUni(value);\r\n                  \r\n                  getAllFacultyName(value);\r\n                }\r\n              }}\r\n              //style={{...pickerSelectStyles}}\r\n              useNativeAndroidPickerStyle={false}\r\n              //fixAndroidTouchableBug={true}\r\n              placeholder={{\r\n                label: \"Chọn trường\",\r\n                value: null,\r\n              }}\r\n              items={itemNameUniversity}\r\n            />\r\n            </View>\r\n\r\n          <View style={styles.dropdown}>\r\n            <RNPickerSelect\r\n              onValueChange={(value) => {\r\n\r\n                if(value!=null){\r\n                  console.log(value);\r\n                  setIdFaculty(value);\r\n                }\r\n               \r\n               \r\n              }}\r\n              //style={{ inputAndroid: { color: \"black\" } }}\r\n              useNativeAndroidPickerStyle={false}\r\n              //fixAndroidTouchableBug={true}\r\n              placeholder={{\r\n                label: \"Chọn khoa\",\r\n                value: null,\r\n              }}\r\n              items={itemFacultyName}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.buttonLoginContainer}>\r\n            <TouchableOpacity\r\n              style={styles.btnLoginTouchable}\r\n              onPress={() => {\r\n                if(checkPassword() && checkUsername() && idUni!=\"\" && idFaculty !=\"\" && fullname.trim().length>0) {\r\n                  register();\r\n                }\r\n                else if(fullname.trim().length===0){\r\n                  alert(\"Tên không được bỏ trống\");\r\n                }\r\n                else if(!checkUsername()){\r\n                  alert(\"Tên tài khoản không hợp lệ\");\r\n                }\r\n                else if(idUni===\"\"){\r\n                  alert(\"Xin vui lòng chọn trường\");\r\n                }\r\n                else if(idFaculty ===\"\"){\r\n                  alert(\"Xin vui lòng chọn khoa\");\r\n                }\r\n                else{\r\n                  alert(\"Mặt khẩu hoặc mật khẩu xác nhận không hợp lệ\");\r\n                }\r\n                \r\n              }}\r\n            >\r\n              <Text style={styles.textBtnLogIn}>Tạo tài khoản</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.bottomText}>\r\n            <Text>Đã có tài khoản?</Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                navigation.navigate(\"Login\");\r\n              }}\r\n            >\r\n              <Text style={styles.signupText}>Tham gia ngay</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    paddingTop: 120,\r\n  },\r\n\r\n  dropdown: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    backgroundColor: \"#cccc\",\r\n    paddingLeft: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    width: \"100%\",\r\n    borderRadius: 10,\r\n    marginVertical: 20,\r\n  },\r\n\r\n  buttonLoginContainer: {\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    marginVertical: 20,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  textBtnLogIn: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  btnLoginTouchable: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  bottomText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    fontSize: 14,\r\n  },\r\n\r\n  signupText: {\r\n    color: \"#000088\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: 5,\r\n  },\r\n\r\n});\r\n\r\nconst pickerSelectStyles = StyleSheet.create({\r\n  inputIOS: {\r\n    fontSize: 16,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    borderRadius: 4,\r\n    color: 'black',\r\n    paddingRight: 30, // to ensure the text is never behind the icon\r\n  },\r\n  inputAndroid: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    backgroundColor: \"#cccc\",\r\n    paddingLeft: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    width: \"100%\",\r\n    borderRadius: 10,\r\n    marginVertical: 20,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}