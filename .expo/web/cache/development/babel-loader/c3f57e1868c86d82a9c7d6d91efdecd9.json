{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TotNghiep\\\\TotNghiep\\\\src\\\\screens\\\\home\\\\courses\\\\CurrentCourse.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingWithSkeletonScreen from \"./LoadingSkeleton\";\nimport * as courseActions from \"../../../../store/actions/Course\";\n\nvar CurrentCourseInfoScreen = function CurrentCourseInfoScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var unmounted = useRef(false);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var currCourses = useSelector(function (state) {\n    return state.course.currCourses;\n  });\n  var token = useSelector(function (state) {\n    return state.authen.token;\n  });\n  var tmp = [];\n  useEffect(function () {\n    getCurrentCourses();\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n\n  var getCurrentCourses = function getCurrentCourses() {\n    var myHeaders, requestOptions;\n    return _regeneratorRuntime.async(function getCurrentCourses$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            myHeaders = new Headers();\n            myHeaders.append(\"Authorization\", \"bearer \" + token);\n            requestOptions = {\n              method: 'GET',\n              headers: myHeaders,\n              redirect: 'follow'\n            };\n            fetch(\"https://hcmusemu.herokuapp.com/studycourses/currentcourses\", requestOptions).then(function (response) {\n              var statusCode = response.status;\n              var dataRes = response.json();\n              return Promise.all([statusCode, dataRes]);\n            }).then(function (_ref2) {\n              var _ref3 = _slicedToArray(_ref2, 2),\n                  statusCode = _ref3[0],\n                  dataRes = _ref3[1];\n\n              if (statusCode === 200) {\n                setData(dataRes);\n                dispatch(courseActions.getCurrentCourses(dataRes));\n              }\n\n              setLoading(false);\n            }).catch(function (err) {\n              return console.log(err, \"error\");\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return React.createElement(TouchableOpacity, {\n      style: styles.card,\n      onPress: function onPress() {\n        navigation.navigate(\"Content Course\", {\n          idCourse: item.idCourse,\n          name: item.name\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.courseInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.textSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.courseName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, item.name), React.createElement(View, {\n      style: styles.teacherName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, item.teacher.map(function (item, index) {\n      return React.createElement(Text, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, \"Gi\\xE1o vi\\xEAn :\", item);\n    })))));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, isLoading && data.length === 0 && LoadingWithSkeletonScreen(), !isLoading && data.length === 0 && React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Kh\\xF4ng t\\xECm th\\u1EA5y th\\xF4ng tin m\\xF4n h\\u1ECDc n\\xE0o\")), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  courseInfo: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  textSection: {\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  courseName: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginHorizontal: 10,\n    marginTop: 10\n  },\n  card: {\n    marginVertical: 20,\n    marginHorizontal: 10,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: \"#cccccc\",\n    borderRadius: 10\n  },\n  teacherName: {\n    marginVertical: 15,\n    marginHorizontal: 20\n  }\n});\nexport default CurrentCourseInfoScreen;","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/src/screens/home/courses/CurrentCourse.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","LoadingWithSkeletonScreen","courseActions","CurrentCourseInfoScreen","navigation","dispatch","unmounted","data","setData","isLoading","setLoading","currCourses","state","course","token","authen","tmp","getCurrentCourses","current","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","statusCode","status","dataRes","json","Promise","all","catch","err","console","log","renderItem","item","styles","card","navigate","idCourse","name","courseInfo","textSection","courseName","teacherName","teacher","map","index","container","length","flex","justifyContent","alignItems","toString","StyleSheet","create","flexDirection","fontSize","fontWeight","marginHorizontal","marginTop","marginVertical","backgroundColor","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState} from 'react';\r\nimport { View, Text,TouchableOpacity,StyleSheet,FlatList,RefreshControl} from 'react-native';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\n\r\n\r\nimport LoadingWithSkeletonScreen from \"./LoadingSkeleton\";\r\n\r\nimport * as courseActions from \"../../../../store/actions/Course\";\r\n\r\nconst CurrentCourseInfoScreen = ( {navigation} ) => {\r\n  const dispatch = useDispatch();\r\n  const unmounted = useRef(false);\r\n\r\n  const [data,setData] = useState([]);\r\n  const [isLoading,setLoading]=useState(true);\r\n\r\n\r\n  const currCourses = useSelector((state) => state.course.currCourses);\r\n  const token = useSelector((state) => state.authen.token);\r\n  const tmp=[];\r\n\r\n  useEffect(() => {\r\n    getCurrentCourses();\r\n    return()=>{\r\n      unmounted.current = true;\r\n    }\r\n  },[]);\r\n\r\n  const getCurrentCourses = async () =>{\r\n    setLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `bearer ${token}`);\r\n\r\n    var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow'\r\n    };\r\n\r\n    fetch(\"https://hcmusemu.herokuapp.com/studycourses/currentcourses\",requestOptions)\r\n    .then((response) => {\r\n      const statusCode = response.status;\r\n      const dataRes = response.json();\r\n      return Promise.all([statusCode, dataRes]);\r\n    })\r\n      .then(([statusCode, dataRes]) => {\r\n          if(statusCode === 200){\r\n            setData(dataRes);\r\n            dispatch(courseActions.getCurrentCourses(dataRes));\r\n          }\r\n          setLoading(false);\r\n\r\n      }).catch((err) => console.log(err, \"error\"));\r\n\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <TouchableOpacity style={styles.card} onPress={() =>{\r\n      navigation.navigate(\"Content Course\",{\r\n        idCourse : item.idCourse,\r\n        name : item.name\r\n      });\r\n    }}>\r\n      <View style={styles.courseInfo}>\r\n        \r\n        <View style={styles.textSection}>\r\n          \r\n          <Text style={styles.courseName}>{item.name}</Text>\r\n          \r\n           <View style={styles.teacherName}>\r\n              {item.teacher.map((item,index)=>(\r\n                <Text key={index}>Giáo viên :{item}</Text>\r\n              ))}\r\n            </View>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n\r\n  return (\r\n            \r\n      <View style={styles.container}>\r\n        {/* <Text>{data.length}</Text> */}\r\n\r\n        {isLoading && data.length === 0 && LoadingWithSkeletonScreen()}\r\n        {!isLoading && data.length === 0 && <View style={{flex: 1,justifyContent: 'center',alignItems: 'center'}}>\r\n            <Text>\r\n              Không tìm thấy thông tin môn học nào\r\n            </Text>\r\n          </View>}\r\n        \r\n          <FlatList\r\n            data={data}\r\n            keyExtractor={(item,index) => index.toString()}\r\n            renderItem={renderItem}\r\n          />\r\n    \r\n      </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  courseInfo:{\r\n    flexDirection:\"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  textSection:{\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  courseName:{\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginHorizontal:10,\r\n    marginTop:10\r\n    \r\n  },\r\n\r\n  card: {\r\n    marginVertical:20,\r\n    marginHorizontal:10,\r\n    backgroundColor:'white',\r\n    borderWidth: 1,\r\n    borderColor: \"#cccccc\",\r\n    borderRadius: 10,\r\n  },\r\n  teacherName: {\r\n    marginVertical:15,\r\n    marginHorizontal:20,\r\n  }\r\n});\r\n\r\nexport default CurrentCourseInfoScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}