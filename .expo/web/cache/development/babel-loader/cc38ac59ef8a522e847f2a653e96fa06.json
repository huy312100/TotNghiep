{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TotNghiep\\\\TotNghiep\\\\src\\\\screens\\\\authentications\\\\Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Heading, UsernameInput, PasswordInput } from \"../../components/authentications/common/Index\";\nimport { useDispatch } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as authActions from \"../../../store/actions/Authen\";\nimport LoadingScreen from \"../LoadingScreen\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var loginAPI = function loginAPI() {\n    var details, formBody, property, encodedKey, encodedValue;\n    return _regeneratorRuntime.async(function loginAPI$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(username != \"\" && password != \"\")) {\n              _context2.next = 10;\n              break;\n            }\n\n            setLoading(true);\n            details = {\n              'username': username,\n              'password': password\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(fetch('https://hcmusemu.herokuapp.com/account/signin', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }).then(function (response) {\n              var statusCode = response.status;\n              var data = response.json();\n              return Promise.all([statusCode, data]);\n            }).then(function _callee(_ref2) {\n              var _ref3, statusCode, data, token, _token;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _ref3 = _slicedToArray(_ref2, 2), statusCode = _ref3[0], data = _ref3[1];\n                      console.log(statusCode, data);\n                      setLoading(false);\n\n                      if (!(statusCode === 200 && data.role === \"1\")) {\n                        _context.next = 21;\n                        break;\n                      }\n\n                      if (!(data.firstsign === true)) {\n                        _context.next = 13;\n                        break;\n                      }\n\n                      token = data.token + 'sT';\n                      _context.next = 8;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('tokenValue', token));\n\n                    case 8:\n                      dispatch(authActions.login(token));\n                      navigation.navigate(\"Start Config\");\n                      setLoading(false);\n                      _context.next = 19;\n                      break;\n\n                    case 13:\n                      _token = data.token + 'sT';\n                      _context.next = 16;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('tokenValue', _token));\n\n                    case 16:\n                      dispatch(authActions.login(_token));\n                      navigation.navigate(\"Main\");\n                      setLoading(false);\n\n                    case 19:\n                      _context.next = 23;\n                      break;\n\n                    case 21:\n                      setLoading(false);\n                      alert(\"Tài khoản hoặc mật khẩu không đúng.Xin vui lòng thử lại\");\n\n                    case 23:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).done());\n\n          case 8:\n            _context2.next = 11;\n            break;\n\n          case 10:\n            alert(\"Xin vui lòng điển đầy đủ thông tin\");\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.imageLogo,\n    source: require(\"../../../assets/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"E M U\"), React.createElement(UsernameInput, {\n    placeholder: \"Địa chỉ E-mail\",\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), React.createElement(PasswordInput, {\n    placeholder: \"Mật khẩu\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.viewForgetPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('Forget Password');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.forgetPassText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\"))), React.createElement(TouchableOpacity, {\n    style: styles.buttonLoginContainer,\n    testID: \"Button.Login\",\n    onPress: function onPress() {\n      loginAPI();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textBtnLogIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\")), React.createElement(View, {\n    style: styles.bottomText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Register\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.signupText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"\\u0110\\u0103ng k\\xFD ngay\"))), isLoading && LoadingScreen()));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    padding: 10,\n    paddingTop: 80\n  },\n  imageLogo: {\n    width: 175,\n    height: 125\n  },\n  passInput: {\n    backgroundColor: \"#ccc\",\n    width: \"100%\"\n  },\n  viewForgetPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    paddingRight: 5,\n    marginTop: 20\n  },\n  forgetPassText: {\n    fontWeight: \"bold\",\n    color: \"#336633\",\n    fontSize: 16\n  },\n  bottomText: {\n    flex: 1,\n    alignItems: \"center\",\n    position: \"absolute\",\n    bottom: 0,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    fontSize: 14\n  },\n  signupText: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    marginLeft: 5\n  },\n  buttonLoginContainer: {\n    backgroundColor: \"#0066FF\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 20,\n    borderRadius: 10,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  textBtnLogIn: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0.5)'\n  },\n  txtIndicator: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"#EEEEEE\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/src/screens/authentications/Login.js"],"names":["React","useState","Heading","UsernameInput","PasswordInput","useDispatch","AsyncStorage","authActions","LoadingScreen","LoginScreen","navigation","dispatch","username","setUsername","password","setPassword","isLoading","setLoading","loginAPI","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","then","response","statusCode","status","data","json","Promise","all","console","log","role","firstsign","token","setItem","login","navigate","alert","done","Keyboard","dismiss","styles","container","imageLogo","require","viewForgetPassword","forgetPassText","buttonLoginContainer","textBtnLogIn","bottomText","signupText","StyleSheet","create","flex","backgroundColor","alignItems","padding","paddingTop","width","height","passInput","paddingRight","marginTop","fontWeight","color","fontSize","position","bottom","marginBottom","flexDirection","marginLeft","justifyContent","marginVertical","borderRadius","paddingBottom","textAlign","loading","left","right","top","txtIndicator"],"mappings":"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","sourcesContent":["import React,{ useState } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity,Keyboard,TouchableWithoutFeedback,Image} from \"react-native\";\r\nimport {\r\n  Heading,\r\n  UsernameInput,\r\n  PasswordInput,\r\n} from \"../../components/authentications/common/Index\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport * as authActions from '../../../store/actions/Authen';\r\n\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n\r\n  const dispatch =useDispatch();\r\n\r\n  const [username,setUsername]=useState('');\r\n  const [password,setPassword]=useState('');\r\n  const [isLoading,setLoading]=useState(false);\r\n\r\n  const loginAPI=async()=>{\r\n    if(username!=\"\" && password!=\"\"){\r\n      setLoading(true);\r\n      let details = {\r\n        'username': username,\r\n        'password': password\r\n    };\r\n  \r\n    let formBody = [];\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n  \r\n    await fetch('https://hcmusemu.herokuapp.com/account/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: formBody\r\n      }).then((response) => {\r\n        const statusCode = response.status;\r\n        const data = response.json();\r\n        return Promise.all([statusCode, data]);\r\n      })\r\n        .then(async ([statusCode, data]) => {\r\n            console.log(statusCode,data);\r\n            setLoading(false);\r\n            if(statusCode===200 && data.role===\"1\"){\r\n              if(data.firstsign === true){\r\n                const token = data.token + 'sT';\r\n                await AsyncStorage.setItem('tokenValue',token);\r\n                dispatch(authActions.login(token));\r\n                navigation.navigate(\"Start Config\");\r\n                setLoading(false);\r\n              }\r\n              else{\r\n                const token = data.token + 'sT';\r\n                await AsyncStorage.setItem('tokenValue',token);\r\n                dispatch(authActions.login(token));\r\n                navigation.navigate(\"Main\");\r\n                setLoading(false);\r\n              }\r\n             \r\n            }else{\r\n              setLoading(false);\r\n              alert(\"Tài khoản hoặc mật khẩu không đúng.Xin vui lòng thử lại\")\r\n            }\r\n        }).done();\r\n    }\r\n    else{\r\n      alert(\"Xin vui lòng điển đầy đủ thông tin\");\r\n    }\r\n }\r\n  return (\r\n    <TouchableWithoutFeedback onPress={()=>{\r\n      Keyboard.dismiss();\r\n    }}>\r\n      <View style={styles.container}>\r\n\r\n        <Image style={styles.imageLogo} source={require(\"../../../assets/logo.png\")}/>\r\n        <Heading>E M U</Heading>\r\n        <UsernameInput placeholder={\"Địa chỉ E-mail\"}\r\n          onChangeText={(username)=>setUsername(username)}/>\r\n\r\n        <PasswordInput placeholder={\"Mật khẩu\"}\r\n          onChangeText={(password)=>setPassword(password)}/>\r\n\r\n        <View style={styles.viewForgetPassword}>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate('Forget Password');\r\n            }}\r\n          >\r\n            <Text style={styles.forgetPassText}>Quên mật khẩu?</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n\r\n\r\n        <TouchableOpacity style={styles.buttonLoginContainer} testID=\"Button.Login\"\r\n          onPress={() => {\r\n            loginAPI();\r\n            }}>\r\n          <Text style={styles.textBtnLogIn}>Đăng nhập</Text>\r\n        </TouchableOpacity>\r\n\r\n        <View style={styles.bottomText}>\r\n          <Text>Chưa có tài khoản?</Text>\r\n          <TouchableOpacity onPress={() =>{\r\n            //dispatch(universityActions.getAllInfoUniversity());\r\n            navigation.navigate(\"Register\");\r\n            \r\n          }}>\r\n            <Text style={styles.signupText}>Đăng ký ngay</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {isLoading && LoadingScreen()}\r\n        </View>\r\n    </TouchableWithoutFeedback>\r\n    \r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    paddingTop: 80,\r\n  },\r\n\r\n  imageLogo: {\r\n    width:175,\r\n    height:125,\r\n  },\r\n\r\n  passInput: {\r\n    backgroundColor: \"#ccc\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  viewForgetPassword: {\r\n    width:'100%',\r\n    alignItems: 'flex-end',\r\n    paddingRight:5,\r\n    marginTop:20\r\n  },\r\n\r\n  forgetPassText: {\r\n    fontWeight: \"bold\",\r\n    color: \"#336633\",\r\n    fontSize: 16,\r\n  },\r\n\r\n  bottomText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    marginBottom: 20,\r\n    flexDirection: \"row\",\r\n    fontSize: 14,\r\n  },\r\n\r\n  signupText: {\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: 5,\r\n  },\r\n\r\n  buttonLoginContainer: {\r\n    backgroundColor: \"#0066FF\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n    borderRadius: 10,\r\n    paddingTop:20,\r\n    paddingBottom:20\r\n  },\r\n\r\n  textBtnLogIn: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  loading: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'rgba(52, 52, 52, 0.5)'\r\n  },\r\n\r\n  txtIndicator: {\r\n    fontSize:15,\r\n    fontWeight: \"bold\",\r\n    color:\"#EEEEEE\"\r\n  }\r\n});\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}