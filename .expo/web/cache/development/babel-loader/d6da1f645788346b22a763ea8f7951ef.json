{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TotNghiep\\\\TotNghiep\\\\src\\\\screens\\\\authentications\\\\ChangePassword.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as authActions from \"../../../store/actions/Authen\";\nimport LoadingScreen from \"../LoadingScreen\";\n\nvar ChangePasswordScreen = function ChangePasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOldPass = _useState2[0],\n      setShowOldPass = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visibleOldPass = _useState4[0],\n      setVisibleOldPass = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showNewPass = _useState6[0],\n      setShowNewPass = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visibleNewPass = _useState8[0],\n      setVisibleNewPass = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showConfPass = _useState10[0],\n      setShowConfPass = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibleConfPass = _useState12[0],\n      setVisibleConfPass = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      setPassword = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newPassword = _useState18[0],\n      setNewPassword = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      confirmPassword = _useState20[0],\n      setConfirmPassword = _useState20[1];\n\n  var dispatch = useDispatch();\n  var token = useSelector(function (state) {\n    return state.authen.token;\n  });\n\n  var checkCurrentPass = function checkCurrentPass() {\n    if (password === \"\") {\n      return true;\n    }\n\n    return false;\n  };\n\n  var checkConditionPassword = function checkConditionPassword() {\n    var PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n    if (PASS_REGEX.test(newPassword)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var checkPasswordRepeat = function checkPasswordRepeat() {\n    if (newPassword === confirmPassword) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var ChangePassword = function ChangePassword() {\n    setLoading(true);\n    var details = {\n      Oldpassword: password,\n      Newpassword: newPassword\n    };\n    var formBody = [];\n\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n\n    formBody = formBody.join(\"&\");\n    fetch(\"https://hcmusemu.herokuapp.com/account/changepassword\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Authorization\": \"bearer \" + token\n      },\n      body: formBody\n    }).then(function (response) {\n      var statusCode = response.status;\n      var dataRes = response.json();\n      return Promise.all([statusCode, dataRes]);\n    }).then(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          statusCode = _ref3[0],\n          dataRes = _ref3[1];\n\n      if (statusCode === 200) {\n        dispatch(authActions.changePassword());\n        setLoading(false);\n        navigation.navigate('Profile');\n      } else if (statusCode === 401) {\n        if (dataRes.message === \"Invalid password\") {\n          setLoading(false);\n          Alert.alert(\"Lỗi\", \"Mật khẩu hiện tại chưa chính xác\", [{\n            text: \"OK\",\n            style: \"cancel\"\n          }]);\n        }\n      }\n    }).done();\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.instruction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.instructionLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"M\\u1EADt kh\\u1EA9u ph\\u1EA3i ch\\u1EE9a t\\u1ED1i thi\\u1EC3u t\\xE1m k\\xFD t\\u1EF1, \\xEDt nh\\u1EA5t m\\u1ED9t ch\\u1EEF hoa, m\\u1ED9t ch\\u1EEF th\\u01B0\\u1EDDng v\\xE0 m\\u1ED9t s\\u1ED1\")), React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"M\\u1EADt kh\\u1EA9u hi\\u1EC7n t\\u1EA1i\"), React.createElement(View, {\n    style: styles.passInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: visibleOldPass,\n    style: styles.passInputText,\n    placeholder: \"Nhập mật khẩu hiện tại\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.eyeBtn,\n    onPress: function onPress() {\n      setVisibleOldPass(!visibleOldPass);\n      setShowOldPass(!showOldPass);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: showOldPass === false ? \"eye-outline\" : \"eye-off-outline\",\n    size: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }))), checkCurrentPass() && React.createElement(View, {\n    style: styles.errorPassLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textErrorPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"M\\u1EADt kh\\u1EA9u kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), React.createElement(View, {\n    style: styles.divide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\"), React.createElement(View, {\n    style: styles.passInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: visibleNewPass,\n    style: styles.passInputText,\n    placeholder: \"Nhập mật khẩu mới\",\n    onChangeText: function onChangeText(newPassword) {\n      return setNewPassword(newPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.eyeBtn,\n    onPress: function onPress() {\n      setVisibleNewPass(!visibleNewPass);\n      setShowNewPass(!showNewPass);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: showNewPass === false ? \"eye-outline\" : \"eye-off-outline\",\n    size: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }))), !checkConditionPassword() && newPassword.length > 0 && React.createElement(View, {\n    style: styles.errorPassLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 18\n    }\n  }, React.createElement(Text, {\n    style: styles.textErrorPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi kh\\xF4ng h\\u1EE3p l\\u1EC7\")), React.createElement(View, {\n    style: [styles.passInput, {\n      marginTop: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: visibleConfPass,\n    style: styles.passInputText,\n    placeholder: \"Nhập lại mật khẩu mới\",\n    onChangeText: function onChangeText(confirmPassword) {\n      return setConfirmPassword(confirmPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.eyeBtn,\n    onPress: function onPress() {\n      setVisibleConfPass(!visibleConfPass);\n      setShowConfPass(!showConfPass);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: showConfPass === false ? \"eye-outline\" : \"eye-off-outline\",\n    size: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }))), !checkPasswordRepeat() && React.createElement(View, {\n    style: styles.errorPassLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textErrorPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"M\\u1EADt kh\\u1EA9u nh\\u1EADp l\\u1EA1i kh\\xF4ng kh\\u1EDBp\")), checkPasswordRepeat() && checkConditionPassword() && !checkCurrentPass() ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      ChangePassword();\n    },\n    style: [styles.button, {\n      backgroundColor: 'green'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: styles.textBtnConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u \")) : React.createElement(TouchableOpacity, {\n    disabled: true,\n    style: [styles.button, {\n      backgroundColor: 'grey'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textBtnConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u \")), isLoading && LoadingScreen()));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  instruction: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFCC',\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  instructionLabel: {\n    color: '#AAAAAA'\n  },\n  label: {\n    margin: 18,\n    fontSize: 15\n  },\n  passInput: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginHorizontal: 15\n  },\n  eyeBtn: {\n    position: 'absolute',\n    right: 0,\n    paddingRight: 10,\n    paddingLeft: 10\n  },\n  passInputText: {\n    backgroundColor: \"#ccc\",\n    width: \"100%\",\n    borderRadius: 10,\n    padding: 10,\n    paddingRight: 30\n  },\n  divide: {\n    marginTop: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#DDDDDD'\n  },\n  button: {\n    backgroundColor: \"green\",\n    margin: 60,\n    borderRadius: 20,\n    padding: 10\n  },\n  textBtnConfirm: {\n    color: \"white\",\n    fontSize: 15,\n    textAlign: \"center\"\n  },\n  errorPassLabel: {\n    marginHorizontal: 18\n  },\n  textErrorPass: {\n    color: 'red'\n  }\n});\nexport default ChangePasswordScreen;","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/src/screens/authentications/ChangePassword.js"],"names":["React","useState","MaterialCommunityIcons","useDispatch","useSelector","authActions","LoadingScreen","ChangePasswordScreen","navigation","showOldPass","setShowOldPass","visibleOldPass","setVisibleOldPass","showNewPass","setShowNewPass","visibleNewPass","setVisibleNewPass","showConfPass","setShowConfPass","visibleConfPass","setVisibleConfPass","isLoading","setLoading","password","setPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","dispatch","token","state","authen","checkCurrentPass","checkConditionPassword","PASS_REGEX","test","checkPasswordRepeat","ChangePassword","details","Oldpassword","Newpassword","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","then","response","statusCode","status","dataRes","json","Promise","all","changePassword","navigate","message","Alert","alert","text","style","done","Keyboard","dismiss","styles","container","instruction","instructionLabel","label","passInput","passInputText","eyeBtn","errorPassLabel","textErrorPass","divide","length","marginTop","button","backgroundColor","textBtnConfirm","StyleSheet","create","flex","justifyContent","alignItems","paddingVertical","paddingHorizontal","color","margin","fontSize","flexDirection","marginHorizontal","position","right","paddingRight","paddingLeft","width","borderRadius","padding","borderBottomWidth","borderBottomColor","textAlign"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\r\nimport { View, Text,TouchableOpacity,Keyboard,TouchableWithoutFeedback,StyleSheet,TextInput,Alert} from 'react-native';\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport * as authActions from '../../../store/actions/Authen';\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\n\r\nconst ChangePasswordScreen = ({navigation}) => {\r\n\r\n    const [showOldPass,setShowOldPass]= useState(true);\r\n    const [visibleOldPass,setVisibleOldPass]= useState(true);\r\n    const [showNewPass,setShowNewPass]= useState(true);\r\n    const [visibleNewPass,setVisibleNewPass]= useState(true);\r\n    const [showConfPass,setShowConfPass]= useState(true);\r\n    const [visibleConfPass,setVisibleConfPass]= useState(true);\r\n\r\n    const [isLoading,setLoading]=useState(false);\r\n\r\n\r\n    const [password,setPassword]=useState('');\r\n    const [newPassword,setNewPassword]=useState('');\r\n    const [confirmPassword,setConfirmPassword]=useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.authen.token);\r\n\r\n    const checkCurrentPass = () =>{\r\n        if(password === \"\"){\r\n            return true;\r\n          }\r\n          return false;\r\n    }\r\n\r\n    const checkConditionPassword = () =>{\r\n        var PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\r\n        if(PASS_REGEX.test(newPassword)){\r\n          return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkPasswordRepeat =()=>{\r\n        if(newPassword === confirmPassword ){\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const ChangePassword =()=>{\r\n        setLoading(true);\r\n        let details = {\r\n            Oldpassword: password,\r\n            Newpassword: newPassword,\r\n          };\r\n      \r\n          let formBody = [];\r\n      \r\n          for (let property in details) {\r\n            let encodedKey = encodeURIComponent(property);\r\n            let encodedValue = encodeURIComponent(details[property]);\r\n            formBody.push(encodedKey + \"=\" + encodedValue);\r\n          }\r\n          formBody = formBody.join(\"&\");\r\n      \r\n          fetch(\"https://hcmusemu.herokuapp.com/account/changepassword\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n              \"Authorization\": `bearer ${token}`\r\n            },\r\n            body: formBody,\r\n          }).then((response)=>{\r\n              const statusCode = response.status;\r\n              const dataRes = response.json();\r\n              return Promise.all([statusCode, dataRes]);\r\n          }).then(([statusCode, dataRes])=>{\r\n            if(statusCode === 200){                \r\n              dispatch(authActions.changePassword());\r\n              setLoading(false);\r\n              navigation.navigate('Profile');\r\n            }\r\n            else if(statusCode === 401){\r\n                if(dataRes.message === \"Invalid password\"){\r\n                    setLoading(false);\r\n                    Alert.alert(\r\n                        \"Lỗi\",\r\n                        \"Mật khẩu hiện tại chưa chính xác\",\r\n                        [\r\n                            {\r\n                                text: \"OK\",\r\n                                style: \"cancel\"\r\n                            }\r\n                        ])\r\n                }\r\n            }\r\n          }).done();\r\n    }\r\n\r\n    return(\r\n    <TouchableWithoutFeedback onPress={() =>{\r\n        Keyboard.dismiss();}}>\r\n\r\n        <View style={styles.container}>\r\n            <View style={styles.instruction}>\r\n              <Text style={styles.instructionLabel}>Mật khẩu phải chứa tối thiểu tám ký tự, ít nhất một chữ hoa, một chữ thường và một số</Text>\r\n            </View>\r\n\r\n            <Text style={styles.label}>\r\n                Mật khẩu hiện tại\r\n            </Text>\r\n\r\n            <View style={styles.passInput}>\r\n                <TextInput secureTextEntry={visibleOldPass} style={styles.passInputText} placeholder={\"Nhập mật khẩu hiện tại\"}\r\n                    onChangeText={(password)=>setPassword(password)}/>\r\n                <TouchableOpacity style={styles.eyeBtn}  onPress={()=>{\r\n                    setVisibleOldPass(!visibleOldPass);\r\n                    setShowOldPass(!showOldPass);\r\n                }}>\r\n                    <MaterialCommunityIcons name={showOldPass===false ? \"eye-outline\" : \"eye-off-outline\"} size={16} ></MaterialCommunityIcons>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            {checkCurrentPass() && \r\n                <View style={styles.errorPassLabel}>\r\n                    <Text style={styles.textErrorPass}>Mật khẩu không được để trống</Text>\r\n                </View>}\r\n\r\n            <View style={styles.divide}/>\r\n\r\n            <Text style={styles.label}>\r\n                Mật khẩu mới\r\n            </Text>\r\n\r\n            <View style={styles.passInput}>\r\n                <TextInput secureTextEntry={visibleNewPass} style={styles.passInputText} placeholder={\"Nhập mật khẩu mới\"}\r\n                    onChangeText={(newPassword)=>setNewPassword(newPassword)}/>\r\n                <TouchableOpacity style={styles.eyeBtn}  onPress={()=>{\r\n                    setVisibleNewPass(!visibleNewPass);\r\n                    setShowNewPass(!showNewPass);\r\n                }}>\r\n                    <MaterialCommunityIcons name={showNewPass===false ? \"eye-outline\" : \"eye-off-outline\"} size={16} ></MaterialCommunityIcons>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            {!checkConditionPassword() && newPassword.length > 0 &&\r\n                 <View style={styles.errorPassLabel}>\r\n                    <Text style={styles.textErrorPass}>Mật khẩu mới không hợp lệ</Text>\r\n                </View>}\r\n\r\n            <View style={[styles.passInput,{marginTop:15}]}>\r\n                <TextInput secureTextEntry={visibleConfPass} style={styles.passInputText} placeholder={\"Nhập lại mật khẩu mới\"}\r\n                    onChangeText={(confirmPassword)=>setConfirmPassword(confirmPassword)}/>\r\n                <TouchableOpacity style={styles.eyeBtn}  onPress={()=>{\r\n                    setVisibleConfPass(!visibleConfPass);\r\n                    setShowConfPass(!showConfPass);\r\n                }}>\r\n                    <MaterialCommunityIcons name={showConfPass===false ? \"eye-outline\" : \"eye-off-outline\"} size={16} ></MaterialCommunityIcons>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            {!checkPasswordRepeat() &&\r\n                <View style={styles.errorPassLabel}>\r\n                    <Text style={styles.textErrorPass}>Mật khẩu nhập lại không khớp</Text>\r\n                </View>}\r\n\r\n            { checkPasswordRepeat() && checkConditionPassword() && !checkCurrentPass() ?\r\n               <TouchableOpacity\r\n                onPress={() => {ChangePassword()}}\r\n                style={[styles.button,{backgroundColor:'green'}]}>\r\n                <Text style={styles.textBtnConfirm}>Đổi mật khẩu </Text>\r\n            </TouchableOpacity>\r\n            :\r\n            <TouchableOpacity\r\n                disabled={true}\r\n                style={[styles.button,{backgroundColor:'grey'}]}>\r\n                <Text style={styles.textBtnConfirm}>Đổi mật khẩu </Text>\r\n            </TouchableOpacity>}\r\n\r\n            {isLoading && LoadingScreen()}\r\n        </View>\r\n    </TouchableWithoutFeedback>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    \r\n    instruction: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor:'#FFFFCC',\r\n        paddingVertical: 10,\r\n        paddingHorizontal:20\r\n    },\r\n\r\n    instructionLabel: {\r\n        color:'#AAAAAA'\r\n    },\r\n\r\n    label: {\r\n        margin:18,\r\n        fontSize:15\r\n    },\r\n\r\n    passInput: {\r\n        alignItems: \"center\",\r\n        flexDirection:\"row\",\r\n        marginHorizontal:15,\r\n        \r\n      },\r\n    \r\n    eyeBtn: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        paddingRight:10,\r\n        paddingLeft:10,\r\n    },\r\n\r\n    passInputText:{\r\n        backgroundColor: \"#ccc\",\r\n        width: \"100%\",\r\n        borderRadius:10,\r\n        padding:10,\r\n        paddingRight:30\r\n    },\r\n    \r\n    divide:{\r\n        marginTop:20,\r\n        borderBottomWidth:1,\r\n        borderBottomColor:'#DDDDDD'\r\n    },\r\n\r\n    button:{\r\n        backgroundColor: \"green\",\r\n        margin:60,\r\n        borderRadius:20,\r\n        padding:10\r\n    },\r\n\r\n    textBtnConfirm: {\r\n        color: \"white\",\r\n        fontSize: 15,\r\n        textAlign: \"center\",\r\n    },\r\n\r\n    errorPassLabel:{\r\n        marginHorizontal:18,\r\n    },\r\n\r\n    textErrorPass: {\r\n        color:'red'\r\n    }\r\n\r\n\r\n});\r\n\r\nexport default ChangePasswordScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}