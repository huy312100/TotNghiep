{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var getForum = function getForum(token) {\n  var myHeaders, requestOptions;\n  return _regeneratorRuntime.async(function getForum$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Authorization\", \"bearer \" + token);\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            redirect: 'follow'\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/view\", requestOptions).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                statusCode = _ref2[0],\n                dataRes = _ref2[1];\n\n            if (statusCode === 200) {\n              return dataRes;\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var createPost = function createPost(token, title, image, scope) {\n  var myHeaders, convertScope, formdata, localUri, filename, match, type, requestOptions;\n  return _regeneratorRuntime.async(function createPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Authorization\", \"bearer \" + token);\n\n          if (scope === 'Trường') {\n            convertScope = 'u';\n          }\n\n          if (scope === 'Khoa') {\n            convertScope = 'f';\n          }\n\n          formdata = new FormData();\n\n          if (image.uri !== \"\" && image.uri !== null) {\n            localUri = image.uri;\n            filename = localUri.split('/').pop();\n            match = /\\.(\\w+)$/.exec(filename);\n            type = match ? \"image/\" + match[1] : \"image\";\n            formdata.append(\"title\", title);\n            formdata.append(\"image\", {\n              uri: localUri,\n              name: filename,\n              type: type\n            });\n            formdata.append(\"scope\", convertScope);\n          } else {\n            formdata.append(\"title\", title);\n            formdata.append(\"scope\", convertScope);\n          }\n\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n          };\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/post\", requestOptions).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n                statusCode = _ref4[0],\n                dataRes = _ref4[1];\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            } else {\n              console.log(\"loi\");\n            }\n          }).catch(function (err) {\n            return console.log(err, \"error\");\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deletePost = function deletePost(token, idPost) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function deletePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          details = {\n            IDPost: idPost\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/delete\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref5) {\n            var _ref6 = _slicedToArray(_ref5, 2),\n                statusCode = _ref6[0],\n                dataRes = _ref6[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var likePost = function likePost(token, idPost) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function likePost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          details = {\n            IDPost: idPost\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/like\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref7) {\n            var _ref8 = _slicedToArray(_ref7, 2),\n                statusCode = _ref8[0],\n                dataRes = _ref8[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var unlikePost = function unlikePost(token, idPost) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function unlikePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          details = {\n            IDPost: idPost\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/unlike\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref9) {\n            var _ref10 = _slicedToArray(_ref9, 2),\n                statusCode = _ref10[0],\n                dataRes = _ref10[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteCmt = function deleteCmt(token, idCmt) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function deleteCmt$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          details = {\n            IDCmt: idCmt\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/deletecmt\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref11) {\n            var _ref12 = _slicedToArray(_ref11, 2),\n                statusCode = _ref12[0],\n                dataRes = _ref12[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var commentPost = function commentPost(token, idPost, comment, image) {\n  var myHeaders, formdata, localUri, filename, match, type, requestOptions;\n  return _regeneratorRuntime.async(function commentPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Authorization\", \"bearer \" + token);\n          formdata = new FormData();\n\n          if (image.uri !== \"\") {\n            localUri = image.uri;\n            filename = localUri.split('/').pop();\n            match = /\\.(\\w+)$/.exec(filename);\n            type = match ? \"image/\" + match[1] : \"image\";\n            formdata.append(\"IDPost\", idPost);\n            formdata.append(\"comment\", comment);\n            formdata.append(\"image\", {\n              uri: localUri,\n              name: filename,\n              type: type\n            });\n          } else {\n            formdata.append(\"IDPost\", idPost);\n            formdata.append(\"comment\", comment);\n          }\n\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n          };\n          _context7.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/cmt\", requestOptions).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref13) {\n            var _ref14 = _slicedToArray(_ref13, 2),\n                statusCode = _ref14[0],\n                dataRes = _ref14[1];\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            } else {\n              console.log(\"loi\");\n            }\n          }).catch(function (err) {\n            return console.log(err, \"error\");\n          }));\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var createCoursePost = function createCoursePost(token, IDCourses, title, image) {\n  var myHeaders, formdata, localUri, filename, match, type, requestOptions;\n  return _regeneratorRuntime.async(function createCoursePost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Authorization\", \"bearer \" + token);\n          formdata = new FormData();\n\n          if (image.uri !== \"\" && image.uri !== null) {\n            localUri = image.uri;\n            filename = localUri.split('/').pop();\n            match = /\\.(\\w+)$/.exec(filename);\n            type = match ? \"image/\" + match[1] : \"image\";\n            formdata.append(\"IDCourses\", IDCourses);\n            formdata.append(\"title\", title);\n            formdata.append(\"image\", {\n              uri: localUri,\n              name: filename,\n              type: type\n            });\n          } else {\n            formdata.append(\"IDCourses\", IDCourses);\n            formdata.append(\"title\", title);\n          }\n\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n          };\n          _context8.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/courses/post\", requestOptions).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref15) {\n            var _ref16 = _slicedToArray(_ref15, 2),\n                statusCode = _ref16[0],\n                dataRes = _ref16[1];\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            } else {\n              console.log(\"loi\");\n            }\n          }).catch(function (err) {\n            return console.log(err, \"error\");\n          }));\n\n        case 7:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteCoursePost = function deleteCoursePost(token, idPost) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function deleteCoursePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          details = {\n            IDPost: idPost\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context9.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/courses/delete\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref17) {\n            var _ref18 = _slicedToArray(_ref17, 2),\n                statusCode = _ref18[0],\n                dataRes = _ref18[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var commentCoursePost = function commentCoursePost(token, idPost, comment, image) {\n  var myHeaders, formdata, localUri, filename, match, type, requestOptions;\n  return _regeneratorRuntime.async(function commentCoursePost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Authorization\", \"bearer \" + token);\n          formdata = new FormData();\n\n          if (image.uri !== \"\") {\n            localUri = image.uri;\n            filename = localUri.split('/').pop();\n            match = /\\.(\\w+)$/.exec(filename);\n            type = match ? \"image/\" + match[1] : \"image\";\n            formdata.append(\"IDPost\", idPost);\n            formdata.append(\"comment\", comment);\n            formdata.append(\"image\", {\n              uri: localUri,\n              name: filename,\n              type: type\n            });\n          } else {\n            formdata.append(\"IDPost\", idPost);\n            formdata.append(\"comment\", comment);\n          }\n\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n          };\n          _context10.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/cmt\", requestOptions).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref19) {\n            var _ref20 = _slicedToArray(_ref19, 2),\n                statusCode = _ref20[0],\n                dataRes = _ref20[1];\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            } else {\n              console.log(\"loi\");\n            }\n          }).catch(function (err) {\n            return console.log(err, \"error\");\n          }));\n\n        case 7:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteCourseCmt = function deleteCourseCmt(token, idCmt) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function deleteCourseCmt$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          details = {\n            IDCmt: idCmt\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context11.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/deletecmt\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref21) {\n            var _ref22 = _slicedToArray(_ref21, 2),\n                statusCode = _ref22[0],\n                dataRes = _ref22[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var likeCoursePost = function likeCoursePost(token, idPost) {\n  var details, formBody, property, encodedKey, encodedValue;\n  return _regeneratorRuntime.async(function likeCoursePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          details = {\n            IDPost: idPost\n          };\n          formBody = [];\n\n          for (property in details) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context12.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://hcmusemu.herokuapp.com/forum/courses/like\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              \"Authorization\": \"bearer \" + token\n            },\n            body: formBody\n          }).then(function (response) {\n            var statusCode = response.status;\n            var dataRes = response.json();\n            return Promise.all([statusCode, dataRes]);\n          }).then(function (_ref23) {\n            var _ref24 = _slicedToArray(_ref23, 2),\n                statusCode = _ref24[0],\n                dataRes = _ref24[1];\n\n            console.log(statusCode, dataRes);\n\n            if (statusCode === 200) {\n              console.log(dataRes);\n            }\n          }).catch(function (error) {\n            return console.log('error', error);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/src/services/Forum.js"],"names":["getForum","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","statusCode","status","dataRes","json","Promise","all","catch","error","console","log","createPost","title","image","scope","convertScope","formdata","FormData","uri","localUri","filename","split","pop","match","exec","type","name","body","err","deletePost","idPost","details","IDPost","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","likePost","unlikePost","deleteCmt","idCmt","IDCmt","commentPost","comment","createCoursePost","IDCourses","deleteCoursePost","commentCoursePost","deleteCourseCmt","likeCoursePost"],"mappings":"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","sourcesContent":["export const getForum = async (token) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `bearer ${token}`);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/view\", requestOptions)\r\n    .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        if(statusCode === 200){\r\n            return dataRes;\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const createPost = async (token,title,image,scope)=>{\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `bearer ${token}`);\r\n\r\n    var convertScope ;\r\n\r\n    if(scope === 'Trường'){\r\n        convertScope = 'u'\r\n    }\r\n    \r\n    if(scope === 'Khoa'){\r\n        convertScope = 'f'\r\n    }\r\n\r\n    var formdata = new FormData();\r\n    \r\n    if(image.uri !==\"\" && image.uri !== null){\r\n        let localUri = image.uri;\r\n        let filename = localUri.split('/').pop();\r\n\r\n        // Infer the type of the image\r\n        let match = /\\.(\\w+)$/.exec(filename);\r\n        let type = match ? `image/${match[1]}` : `image`;\r\n\r\n        formdata.append(\"title\", title);\r\n        formdata.append(\"image\", {uri:localUri,name:filename,type});\r\n        formdata.append(\"scope\", convertScope);\r\n    }\r\n\r\n    else{\r\n        formdata.append(\"title\", title);\r\n        formdata.append(\"scope\", convertScope);\r\n    }\r\n    \r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow'\r\n        };\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/post\",requestOptions)\r\n    .then((response) => {\r\n      const statusCode = response.status;\r\n      const dataRes = response.json();\r\n      return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n      if(statusCode === 200){\r\n        console.log(dataRes);\r\n        //editProfile();\r\n      }\r\n      else{\r\n        console.log(\"loi\");\r\n      }\r\n\r\n      //console.log(dataUniversity);\r\n    }).catch((err) => console.log(err, \"error\"));\r\n};\r\n\r\n\r\nexport const deletePost = async(token,idPost) => {\r\n    let details = {\r\n        IDPost: idPost,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/delete\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const likePost = async (token,idPost) =>{\r\n    let details = {\r\n        IDPost: idPost,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/like\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const unlikePost = async (token,idPost) =>{\r\n    let details = {\r\n        IDPost: idPost,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/unlike\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const deleteCmt = async (token,idCmt) =>{\r\n    let details = {\r\n        IDCmt: idCmt,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/deletecmt\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const commentPost = async (token,idPost,comment,image ) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `bearer ${token}`);\r\n\r\n    var formdata = new FormData();\r\n    \r\n    if(image.uri !==\"\"){\r\n        let localUri = image.uri;\r\n        let filename = localUri.split('/').pop();\r\n\r\n        // Infer the type of the image\r\n        let match = /\\.(\\w+)$/.exec(filename);\r\n        let type = match ? `image/${match[1]}` : `image`;\r\n\r\n        formdata.append(\"IDPost\", idPost);\r\n        formdata.append(\"comment\", comment);\r\n        formdata.append(\"image\", {uri:localUri,name:filename,type});\r\n    }\r\n\r\n    else{\r\n        formdata.append(\"IDPost\", idPost);\r\n        formdata.append(\"comment\", comment);\r\n       \r\n    }\r\n    \r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow'\r\n        };\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/cmt\",requestOptions)\r\n    .then((response) => {\r\n      const statusCode = response.status;\r\n      const dataRes = response.json();\r\n      return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n      if(statusCode === 200){\r\n        console.log(dataRes);\r\n        //editProfile();\r\n      }\r\n      else{\r\n        console.log(\"loi\");\r\n      }\r\n\r\n      //console.log(dataUniversity);\r\n    }).catch((err) => console.log(err, \"error\"));\r\n};\r\n\r\n\r\n\r\n//course services\r\nexport const createCoursePost = async (token,IDCourses,title,image)=>{\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `bearer ${token}`);\r\n\r\n    var formdata = new FormData();\r\n    \r\n    if(image.uri !==\"\" && image.uri !== null){\r\n        let localUri = image.uri;\r\n        let filename = localUri.split('/').pop();\r\n\r\n        // Infer the type of the image\r\n        let match = /\\.(\\w+)$/.exec(filename);\r\n        let type = match ? `image/${match[1]}` : `image`;\r\n\r\n        formdata.append(\"IDCourses\", IDCourses);\r\n        formdata.append(\"title\", title);\r\n        formdata.append(\"image\", {uri:localUri,name:filename,type});\r\n    }\r\n\r\n    else{\r\n        formdata.append(\"IDCourses\", IDCourses);\r\n        formdata.append(\"title\", title);\r\n    }\r\n    \r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow'\r\n        };\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/courses/post\",requestOptions)\r\n    .then((response) => {\r\n      const statusCode = response.status;\r\n      const dataRes = response.json();\r\n      return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n      if(statusCode === 200){\r\n        console.log(dataRes);\r\n        //editProfile();\r\n      }\r\n      else{\r\n        console.log(\"loi\");\r\n      }\r\n\r\n      //console.log(dataUniversity);\r\n    }).catch((err) => console.log(err, \"error\"));\r\n};\r\n\r\nexport const deleteCoursePost = async(token,idPost) => {\r\n    let details = {\r\n        IDPost: idPost,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/courses/delete\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const commentCoursePost = async (token,idPost,comment,image ) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `bearer ${token}`);\r\n\r\n    var formdata = new FormData();\r\n    \r\n    if(image.uri !==\"\"){\r\n        let localUri = image.uri;\r\n        let filename = localUri.split('/').pop();\r\n\r\n        // Infer the type of the image\r\n        let match = /\\.(\\w+)$/.exec(filename);\r\n        let type = match ? `image/${match[1]}` : `image`;\r\n\r\n        formdata.append(\"IDPost\", idPost);\r\n        formdata.append(\"comment\", comment);\r\n        formdata.append(\"image\", {uri:localUri,name:filename,type});\r\n    }\r\n\r\n    else{\r\n        formdata.append(\"IDPost\", idPost);\r\n        formdata.append(\"comment\", comment);\r\n       \r\n    }\r\n    \r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow'\r\n        };\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/cmt\",requestOptions)\r\n    .then((response) => {\r\n      const statusCode = response.status;\r\n      const dataRes = response.json();\r\n      return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n      if(statusCode === 200){\r\n        console.log(dataRes);\r\n        //editProfile();\r\n      }\r\n      else{\r\n        console.log(\"loi\");\r\n      }\r\n\r\n      //console.log(dataUniversity);\r\n    }).catch((err) => console.log(err, \"error\"));\r\n};\r\n\r\nexport const deleteCourseCmt = async(token,idCmt) => {\r\n    let details = {\r\n        IDCmt: idCmt,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/deletecmt\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const likeCoursePost = async (token,idPost) =>{\r\n    let details = {\r\n        IDPost: idPost,\r\n    };\r\n  \r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    await fetch(\"https://hcmusemu.herokuapp.com/forum/courses/like\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Authorization\": `bearer ${token}`,\r\n        },\r\n        body: formBody,\r\n    }) .then((response) => {\r\n        const statusCode = response.status;\r\n        const dataRes = response.json();\r\n        return Promise.all([statusCode, dataRes]);\r\n    }).then(([statusCode, dataRes]) => {\r\n        console.log(statusCode,dataRes);\r\n        if(statusCode === 200){\r\n            console.log(dataRes);\r\n        }\r\n    }).catch(error => console.log('error', error));\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}