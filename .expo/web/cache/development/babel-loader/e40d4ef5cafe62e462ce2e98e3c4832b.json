{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var LOGIN = 'LOGIN';\nexport var LOGOUT = 'LOGOUT';\nexport var REGISTER = 'REGISTER';\nexport var CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nexport var TOKEN_NOTIFICATION = 'TOKEN_NOTIFICATION';\nexport var CONNECT_TO_SOCKET = 'CONNECT_TO_SOCKET';\nexport var login = function login(token) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: LOGIN,\n              token: token\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var register = function register() {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: REGISTER\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: LOGOUT\n  };\n};\nexport var changePassword = function changePassword() {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: CHANGE_PASSWORD\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var storeTokenNotification = function storeTokenNotification(data) {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: TOKEN_NOTIFICATION,\n              tokenNotification: data\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var connectToSocket = function connectToSocket(data) {\n  return function _callee5(dispatch) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: CONNECT_TO_SOCKET,\n              socket: data\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/store/actions/Authen.js"],"names":["LOGIN","LOGOUT","REGISTER","CHANGE_PASSWORD","TOKEN_NOTIFICATION","CONNECT_TO_SOCKET","login","token","dispatch","type","register","logout","changePassword","storeTokenNotification","data","tokenNotification","connectToSocket","socket"],"mappings":";AAAA,OAAO,IAAMA,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAC9B,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAET,KADC;AAEPO,cAAAA,KAAK,EAAEA;AAFA,aAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMD,CAPM;AASP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAO,kBAAMF,QAAN;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEP;AADC,aAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAKD,CANM;AAQP,OAAO,IAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO;AAACF,IAAAA,IAAI,EAAER;AAAP,GAAP;AACD,CAFM;AAIP,OAAO,IAAMW,cAAc,GAAE,SAAhBA,cAAgB,GAAM;AACjC,SAAO,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEN;AADC,aAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAKD,CANM;AAQP,OAAO,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;AAC9C,SAAO,kBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEL,kBADC;AAEPW,cAAAA,iBAAiB,EAACD;AAFX,aAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMD,CAPM;AASP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACF,IAAD,EAAU;AACvC,SAAO,kBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEJ,iBADC;AAEPY,cAAAA,MAAM,EAACH;AAFA,aAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMD,CAPM","sourcesContent":["export const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nexport const TOKEN_NOTIFICATION = 'TOKEN_NOTIFICATION';\r\nexport const CONNECT_TO_SOCKET = 'CONNECT_TO_SOCKET';\r\n\r\nexport const login = (token) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: LOGIN,\r\n      token: token,\r\n    })\r\n  }\r\n};\r\n\r\nexport const register = () => {\r\n  return async dispatch =>{\r\n    dispatch({\r\n      type: REGISTER,\r\n    })\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  return {type: LOGOUT};\r\n};\r\n\r\nexport const changePassword =() => {\r\n  return async dispatch =>{\r\n    dispatch({\r\n      type: CHANGE_PASSWORD,\r\n    })\r\n  }\r\n};\r\n\r\nexport const storeTokenNotification = (data) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: TOKEN_NOTIFICATION,\r\n      tokenNotification:data\r\n    })\r\n  }\r\n};\r\n\r\nexport const connectToSocket = (data) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: CONNECT_TO_SOCKET,\r\n      socket:data\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}