{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TotNghiep\\\\TotNghiep\\\\src\\\\screens\\\\home\\\\courses\\\\AllCourse.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingWithSkeletonScreen from \"./LoadingSkeleton\";\nimport * as courseActions from \"../../../../store/actions/Course\";\n\nvar AllCourseInfoScreen = function AllCourseInfoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageCurrent = _useState2[0],\n      setPageCurrent = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var token = useSelector(function (state) {\n    return state.authen.token;\n  });\n  var tmp = [];\n\n  var getAllCourses = function getAllCourses() {\n    var details, formBody, property, encodedKey, encodedValue;\n    return _regeneratorRuntime.async(function getAllCourses$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            details = {\n              page: pageCurrent\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            console.log(formBody);\n            fetch(\"https://hcmusemu.herokuapp.com/studycourses/allcourses\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: \"bearer \" + token\n              },\n              body: formBody\n            }).then(function (response) {\n              var statusCode = response.status;\n              var dataRes = response.json();\n              return Promise.all([statusCode, dataRes]);\n            }).then(function (_ref2) {\n              var _ref3 = _slicedToArray(_ref2, 2),\n                  statusCode = _ref3[0],\n                  dataRes = _ref3[1];\n\n              if (statusCode === 200) {\n                console.log(dataRes);\n                setData(data.concat(dataRes));\n                dispatch(courseActions.getAllCourses(data.concat(dataRes)));\n                setPageCurrent(pageCurrent + 1);\n              }\n\n              setIsLoading(false);\n            }).catch(function (err) {\n              return console.log(err, \"error\");\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getAllCourses();\n    return function () {};\n  }, [pageCurrent]);\n\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.card,\n      onPress: function onPress() {\n        navigation.navigate(\"Content Course\", {\n          idCourse: item.IDCourses,\n          name: item.name\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.courseInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.textSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.courseName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, item.name), React.createElement(View, {\n      style: styles.teacherName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, item.teacher.map(function (item, index) {\n      return React.createElement(Text, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"Gi\\xE1o vi\\xEAn : \", item);\n    }))))));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, isLoading && data.length === 0 && LoadingWithSkeletonScreen(), !isLoading && data.length === 0 && React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 43\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Kh\\xF4ng t\\xECm th\\u1EA5y th\\xF4ng tin m\\xF4n h\\u1ECDc n\\xE0o\")), React.createElement(FlatList, {\n    data: data,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  courseInfo: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  textSection: {\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  courseName: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginHorizontal: 10,\n    marginTop: 10\n  },\n  card: {\n    marginVertical: 20,\n    marginHorizontal: 10,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: \"#cccccc\",\n    borderRadius: 10\n  },\n  teacherName: {\n    marginVertical: 15,\n    marginHorizontal: 20\n  },\n  footerLoader: {\n    marginTop: 10,\n    alignItems: \"center\"\n  }\n});\nexport default AllCourseInfoScreen;","map":{"version":3,"sources":["E:/TotNghiep/TotNghiep/src/screens/home/courses/AllCourse.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","LoadingWithSkeletonScreen","courseActions","AllCourseInfoScreen","navigation","pageCurrent","setPageCurrent","isLoading","setIsLoading","dispatch","data","setData","token","state","authen","tmp","getAllCourses","details","page","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","console","log","fetch","method","headers","Authorization","body","then","response","statusCode","status","dataRes","json","Promise","all","concat","catch","err","renderItem","item","styles","card","navigate","idCourse","IDCourses","name","courseInfo","textSection","courseName","teacherName","teacher","map","index","container","length","flex","justifyContent","alignItems","toString","StyleSheet","create","flexDirection","fontSize","fontWeight","marginHorizontal","marginTop","marginVertical","backgroundColor","borderWidth","borderColor","borderRadius","footerLoader"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useRef } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet,FlatList,ActivityIndicator  } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport LoadingWithSkeletonScreen from \"./LoadingSkeleton\";\r\n\r\nimport * as courseActions from \"../../../../store/actions/Course\";\r\n\r\nconst AllCourseInfoScreen = ({navigation}) => {\r\n  const [pageCurrent,setPageCurrent] = useState(0);\r\n  const [isLoading,setIsLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  // const allCourses = useSelector((state) => state.course.allCourses);\r\n\r\n  const [data, setData] = useState([]);\r\n  const token = useSelector((state) => state.authen.token);\r\n  var tmp = [];\r\n\r\n\r\n  const getAllCourses = async () => {\r\n    setIsLoading(true);\r\n    let details = {\r\n      page: pageCurrent,\r\n    };\r\n\r\n    let formBody = [];\r\n\r\n    for (let property in details) {\r\n      let encodedKey = encodeURIComponent(property);\r\n      let encodedValue = encodeURIComponent(details[property]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    console.log(formBody);\r\n\r\n    fetch(\"https://hcmusemu.herokuapp.com/studycourses/allcourses\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n      body: formBody,\r\n    })\r\n    .then((response) => {\r\n      const statusCode = response.status;\r\n      const dataRes = response.json();\r\n      return Promise.all([statusCode, dataRes]);\r\n    })\r\n      .then(([statusCode, dataRes]) => {\r\n        if(statusCode === 200){\r\n          console.log(dataRes);\r\n          setData(data.concat(dataRes));\r\n          dispatch(courseActions.getAllCourses(data.concat(dataRes)));\r\n          setPageCurrent(pageCurrent+1);\r\n        }\r\n        //tmp.concat(json)\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err, \"error\"));\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getAllCourses();\r\n    return()=>{\r\n\r\n    }\r\n  }, [pageCurrent]);\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View>\r\n      <TouchableOpacity\r\n        style={styles.card}\r\n        onPress={() => {\r\n          navigation.navigate(\"Content Course\", {\r\n            idCourse: item.IDCourses,\r\n            name: item.name,\r\n          });\r\n        }}\r\n      >\r\n        <View style={styles.courseInfo}>\r\n          <View style={styles.textSection}>\r\n            <Text style={styles.courseName}>{item.name}</Text>\r\n\r\n            <View style={styles.teacherName}>\r\n              {item.teacher.map((item, index) => (\r\n                <Text key={index}>Giáo viên : {item}</Text>\r\n              ))\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {isLoading && data.length === 0 && LoadingWithSkeletonScreen()}\r\n      {!isLoading && data.length === 0 && <View style={{flex: 1,justifyContent: 'center',alignItems: 'center'}}>\r\n            <Text>\r\n              Không tìm thấy thông tin môn học nào\r\n            </Text>\r\n          </View>}\r\n\r\n      <FlatList\r\n        data={data}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item,index) => index.toString()}\r\n        // onEndReached={handleMore}\r\n        // onEndReachedThreshold={0}\r\n        // ListFooterComponent={renderFooter}\r\n      />\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  courseInfo: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  textSection: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  courseName: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginHorizontal: 10,\r\n    marginTop: 10,\r\n  },\r\n\r\n  card: {\r\n    marginVertical: 20,\r\n    marginHorizontal: 10,\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"#cccccc\",\r\n    borderRadius: 10,\r\n  },\r\n\r\n  teacherName: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 20,\r\n  },\r\n\r\n  footerLoader: {\r\n      marginTop : 10,\r\n      alignItems: \"center\",\r\n  }\r\n});\r\n\r\nexport default AllCourseInfoScreen;\r\n"]},"metadata":{},"sourceType":"module"}